/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

import java.awt.Component;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

public class FileGUI extends javax.swing.JFrame {

    /**
     * Creates new form FileGUI
     */
    public FileGUI() {
        myModel = new DefaultTableModel(columns, 0);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        browseBtn = new javax.swing.JButton();
        browseLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        scanSubBox = new javax.swing.JCheckBox();
        startProcessingBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        processingTable = new javax.swing.JTable();
        longestOverall = new javax.swing.JLabel();
        shortestOverall = new javax.swing.JLabel();
        status = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        browseBtn.setBackground(new java.awt.Color(51, 51, 51));
        browseBtn.setForeground(new java.awt.Color(255, 255, 255));
        browseBtn.setText("Browse");
        browseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseBtnActionPerformed(evt);
            }
        });

        browseLabel.setText("No Directory Selected yet.");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Directory:");

        scanSubBox.setText("Scan sub directories");
        scanSubBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scanSubBoxActionPerformed(evt);
            }
        });

        startProcessingBtn.setBackground(new java.awt.Color(51, 51, 51));
        startProcessingBtn.setForeground(new java.awt.Color(255, 255, 255));
        startProcessingBtn.setText("Start Processing");
        startProcessingBtn.setEnabled(false);
        startProcessingBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startProcessingBtnActionPerformed(evt);
            }
        });

        processingTable.setModel(myModel);
        processingTable.setEnabled(false);
        jScrollPane1.setViewportView(processingTable);

        longestOverall.setText("longestOverall");

        shortestOverall.setText("shortestOverall");

        status.setText("Not Done");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(longestOverall, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(browseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(scanSubBox))
                                .addGap(33, 33, 33)
                                .addComponent(browseBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 6, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(shortestOverall, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(startProcessingBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(101, 101, 101)
                                .addComponent(status)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(browseBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(browseLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(scanSubBox)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startProcessingBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(status))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(longestOverall)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(shortestOverall)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void browseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseBtnActionPerformed
        JFileChooser fileChooser = new JFileChooser();

        // Set the file selection mode to directories only
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        Component frame = null;

        // Show the dialog and get the selected folder
        int result = fileChooser.showOpenDialog(frame);

        if (result == JFileChooser.APPROVE_OPTION) {
            // The user selected a folder
            String selectedFolderPath = fileChooser.getSelectedFile().getAbsolutePath();
            folderPath = selectedFolderPath;
            File foldername = new File(folderPath);
            browseLabel.setText(foldername.getName());
        }

        try {
            startProcessingBtn.setEnabled(true);
        } catch (Exception ex) {
            status.setText("[status]");
            startProcessingBtn.setEnabled(false);
            JOptionPane.showMessageDialog(null, "Wrong Directory");
        }
    }//GEN-LAST:event_browseBtnActionPerformed

    private void scanSubBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scanSubBoxActionPerformed
        scanDirBox = scanSubBox.isSelected();
    }//GEN-LAST:event_scanSubBoxActionPerformed

    private void startProcessingBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startProcessingBtnActionPerformed
        try {
            fileScanner = new FileProcessing(scanDirBox, folderPath);
            fileScanner.initializeTextFiles();
            fileScanner.setGUI(this);
            List<File> myFiles = fileScanner.getTextFiles();

            // Clear the existing rows in myModel
            myModel.setRowCount(0);

            for (File f : myFiles) {
                Object[] myRow = new Object[myFiles.size()];
                myRow[0] = f.getName();
                myModel.addRow(myRow);
            }
            startProcessingBtn.setEnabled(true);
            fileScanner.readyProcessing();
            fileScanner.startProcessing();
            startProcessingBtn.setEnabled(false);
        } catch (Exception ex) {
            status.setText("[status]");
            startProcessingBtn.setEnabled(false);
            JOptionPane.showMessageDialog(null, "Wrong Directory");
        }
    }//GEN-LAST:event_startProcessingBtnActionPerformed

    public void updateMyTable(List<Object> values, File row) {
        Object[] myArray = values.toArray();
        for (int i = 0; i < myModel.getRowCount(); i++) {
            if (myModel.getValueAt(i, 0).equals(row.getName())) {
                for (int j = 1; j < myArray.length; j++) {
                    myModel.setValueAt(myArray[j], i, j);
                }
            }
        }
        this.repaint();
        this.revalidate();
    }

    public void updateShortestAndLongest(String shortest, String longest) {
        shortestOverall.setText(shortest);
        longestOverall.setText(longest);
    }

    public void updateStatus() {
        status.setText("Done");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FileGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FileGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FileGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FileGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FileGUI().setVisible(true);
            }
        });
    }
    //private FileProcessingProject myLogic;
    String[] columns = {"Files", "Words", "is", "are", "you", "Longest", "Shortest"};
    private String folderPath;
    private boolean scanDirBox = false;
    private FileProcessing fileScanner;
    private DefaultTableModel myModel;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browseBtn;
    private javax.swing.JLabel browseLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel longestOverall;
    private javax.swing.JTable processingTable;
    private javax.swing.JCheckBox scanSubBox;
    private javax.swing.JLabel shortestOverall;
    private javax.swing.JButton startProcessingBtn;
    private javax.swing.JLabel status;
    // End of variables declaration//GEN-END:variables
}
